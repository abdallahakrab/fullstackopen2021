{"version":3,"sources":["ContactForm.js","Contact.js","Contacts.js","SearchForm.js","services/persons.js","Notification.js","App.js","index.js"],"names":["ContactForm","onAdd","newName","onNameChange","newNumber","onNumberChange","onSubmit","htmlFor","value","onChange","id","type","Contact","contact","onClickDelete","name","number","onClick","Contacts","contacts","onDelete","map","SearchForm","searchTerm","onSearch","BASEURL","apiFunctions","addPerson","person","axios","post","then","res","data","removePerson","contactId","delete","updateNumber","put","Notification","error","errorColor","className","App","useState","setNewName","setNewNumber","setContacts","setSearchTerm","errorMessage","setErrorMessage","setErrorColor","useEffect","get","filteredContacts","filter","toLowerCase","includes","toLocaleLowerCase","e","input","target","preventDefault","contactFound","find","window","confirm","newObject","service","console","log","newList","setTimeout","catch","updatedList","contactObject","concat","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93e455d2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ContactForm({\n  onAdd,\n  newName,\n  onNameChange,\n  newNumber,\n  onNumberChange,\n}) {\n  return (\n    <div>\n      <form onSubmit={onAdd}>\n        <label htmlFor=\"name\">Name</label>\n        <input value={newName} onChange={onNameChange} id=\"name\" type=\"text\" />\n        <label htmlFor=\"number\">Number</label>\n        <input value={newNumber} onChange={onNumberChange} id=\"number\" />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nfunction Contact({ contact, onClickDelete }) {\n  return (\n    <div>\n      {`${contact.name}  ${contact.number}`}{\" \"}\n      <button onClick={() => onClickDelete(contact)}>delete</button>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"./Contact\";\nfunction Contacts({ contacts, onDelete }) {\n  return (\n    <div>\n      {contacts.map((contact) => (\n        <Contact contact={contact} onClickDelete={onDelete} key={contact.id}>\n          {contact.name}\n          {contact.number}\n        </Contact>\n      ))}\n    </div>\n  );\n}\n\nexport default Contacts;\n","import React from \"react\";\n\nfunction SearchForm({ searchTerm, onSearch }) {\n  return (\n    <div>\n      <label htmlFor=\"search\">name</label>\n      <input id=\"search\" value={searchTerm} onChange={onSearch} type=\"text\" />\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import axios from \"axios\";\n\nconst BASEURL = \"/api/persons/\";\nconst addPerson = (person) => {\n  const request = axios.post(BASEURL, person);\n  return request.then((res) => res.data);\n};\n\nconst removePerson = (contactId) => {\n  return axios.delete(`${BASEURL}${contactId}`);\n};\n\nconst updateNumber = (person) => {\n  const request = axios.put(`${BASEURL}${person.id}`, person);\n  return request.then((res) => res.data);\n};\n\nconst apiFunctions = { addPerson, removePerson, updateNumber };\n\nexport default apiFunctions;\n","import React from \"react\";\n\nfunction Notification({ error, errorColor }) {\n  if (!error) {\n    return null;\n  }\n  return <div className={`error${errorColor}`}>{error}</div>;\n}\n\nexport default Notification;\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport SearchForm from \"./SearchForm\";\nimport service from \"./services/persons\";\nimport axios from \"axios\";\nimport Notification from \"./Notification\";\nfunction App() {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [errorColor, setErrorColor] = useState(\"Green\");\n\n  useEffect(() => {\n    axios.get(\"/api/persons\").then((res) => {\n      setContacts(res.data);\n    });\n  }, []);\n\n  const onNameChange = (e) => {\n    const input = e.target.value;\n    setNewName(input);\n  };\n  const onNumberChange = (e) => {\n    const input = e.target.value;\n    setNewNumber(input);\n  };\n  const onSearch = (e) => {\n    const input = e.target.value;\n    setSearchTerm(input);\n  };\n  const onAdd = (e) => {\n    e.preventDefault();\n    const contactFound = contacts.find((contact) => contact.name === newName);\n    if (contactFound) {\n      const answer = window.confirm(\n        `${newName} already exists do you want to replace the old number with the new one?`\n      );\n      if (answer) {\n        const newObject = { ...contactFound, number: newNumber };\n        service\n          .updateNumber(newObject)\n          .then((person) => {\n            console.log(person);\n            const newList = contacts.map((contact) => {\n              console.log(contact);\n              console.log(person);\n              return contact.id === person.id ? person : contact;\n            });\n            setErrorMessage(\"Number updated\");\n            setTimeout(() => setErrorMessage(\"\"), 5000);\n            console.log(newList);\n            setContacts(newList);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch(() => {\n            setErrorMessage(`${newName} is not found`);\n            setErrorColor(\"Red\");\n            setTimeout(() => {\n              setErrorMessage(\"\");\n              setErrorColor(\"Green\");\n            }, 5000);\n            const updatedList = contacts.filter(\n              (contact) => contact.name !== newName\n            );\n            setContacts(updatedList);\n          });\n      }\n      return;\n    }\n\n    const contactObject = {\n      name: newName,\n      number: newNumber,\n    };\n    service\n      .addPerson(contactObject)\n      .then((person) => {\n        setContacts(contacts.concat(person));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setErrorMessage(\"Contact added\");\n        setTimeout(() => setErrorMessage(\"\"), 5000);\n        //\n        //\n        //\n      })\n      .catch((error) => {\n        const errorMessage = error.response.data.error;\n        setErrorMessage(errorMessage);\n        setErrorColor(\"Red\");\n        setTimeout(() => {\n          setErrorMessage(\"\");\n          setErrorColor(\"Green\");\n        }, 5000);\n      });\n    // });\n    // setContacts(contacts.concat(contactObject));\n  };\n  const onDelete = ({ id, name }) => {\n    const answer = window.confirm(` do you really want to delete ${name}?`);\n    if (answer) {\n      console.log(\"here\");\n      service\n        .removePerson(id)\n        .then(() => {\n          console.log(\"newlist\");\n\n          const newList = contacts.filter((contact) => contact.id !== id);\n          setContacts(newList);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n  );\n\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <Notification error={errorMessage} errorColor={errorColor} />\n      {/* Search */}\n      <h1>Search</h1>\n      <SearchForm searchTerm={searchTerm} onSearch={onSearch} />\n      <h1>Add new Contact</h1>\n      <ContactForm\n        onAdd={onAdd}\n        onNameChange={onNameChange}\n        onNumberChange={onNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      {/*  View Numbers */}\n      <h3>Numbers</h3>\n      <Contacts\n        contacts={searchTerm ? filteredContacts : contacts}\n        onDelete={onDelete}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}